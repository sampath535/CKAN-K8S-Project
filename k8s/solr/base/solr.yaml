apiVersion: v1
kind: Service
metadata:
  name: odesolr-service
  labels:
    app: odesolr
  annotations: 
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - name: "https"
      port: 8983
      targetPort: 8983
  selector:
    app: odesolr
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: odesolr
spec:
  selector:
    matchLabels:
      app: odesolr
  serviceName: odesolr-service
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel #Parallel
  template:
    metadata:
      labels:
        app: odesolr
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      containers:
        - name: ode-solr
          image: ode-solr-image
          ports:
          - containerPort: 8983
            name: socket
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
          volumeMounts:
            - name: odesolr-data
              mountPath: /var/solr
            - mountPath: /opt/solr/server/solr/configsets/currency.xml
              name: currency-xml
              subPath: currency.xml
            - mountPath: /opt/solr/server/solr/configsets/synonyms.txt
              name: synonyms-txt
              subPath: synonyms.txt
            - mountPath: /opt/solr/server/solr/configsets/stopwords.txt
              name: stopwords-txt
              subPath: stopwords.txt
            - mountPath: /opt/solr/server/solr/configsets/protwords.txt
              name: protwords-txt
              subPath: protwords.txt
            - mountPath: /opt/solr/server/solr/configsets/elevate.xml
              name: elevate-xml
              subPath: elevate.xml
            - mountPath: /opt/solr/server/solr/configsets/ckan/conf/managed-schema.txt
              name: schema-solr8-xml
              subPath: managed-schema.txt
          livenessProbe:
            # runs a built-in script to check for Solr readiness/liveness
            exec:
              command:
                - /bin/bash
                - -c
                - "/opt/docker-solr/scripts/wait-for-solr.sh"
            initialDelaySeconds: 20
            timeoutSeconds: 5
          readinessProbe:
            # runs a built-in script to check for Solr readiness/liveness
            exec:
              command:
                - /bin/bash
                - -c
                - "/opt/docker-solr/scripts/wait-for-solr.sh"
            initialDelaySeconds: 20
            timeoutSeconds: 5
      volumes:
      - configMap:
          defaultMode: 484
          items:
          - key: currency.xml
            path: currency.xml
          name: solr-config
        name: currency-xml
      - configMap:
          defaultMode: 484
          items:
          - key: elevate.xml
            path: elevate.xml
          name: solr-config
        name: elevate-xml
      - configMap:
          defaultMode: 484
          items:
          - key: protwords.txt
            path: protwords.txt
          name: solr-config
        name: protwords-txt
      - configMap:
          defaultMode: 484
          items:
          - key: stopwords.txt
            path: stopwords.txt
          name: solr-config
        name: stopwords-txt
      - configMap:
          defaultMode: 484
          items:
          - key: synonyms.txt
            path: synonyms.txt
          name: solr-config
        name: synonyms-txt
      - configMap:
          defaultMode: 484
          items:
          - key: schema.solr8.xml
            path: schema.solr8.xml
          name: solr-config
        name: schema-solr8-xml
  volumeClaimTemplates:
  - metadata:
      name: odesolr-data
    spec:
      accessModes: [ ReadWriteOnce ]
      storageClassName: ode-solr-sc
      resources:
        requests:
          storage: 64Gi