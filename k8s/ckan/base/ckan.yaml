---
apiVersion: v1
kind: Service
metadata:
  name: odlckan-hs
  labels:
    app: odlckan
  annotations: 
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - name: "https"
      port: 5000
      targetPort: 5000
  selector:
    app: odlckan
---
apiVersion: v1
kind: Service
metadata:
  name: odlckan-cs
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  labels:
    app: odlckan
spec:
  type: LoadBalancer
  ports:
    - port: 443
      name: https
      targetPort: 5000
  selector:
    app: odlckan
  sessionAffinity: ClientIP
  sessionAffinityConfig: 
    clientIP:
      timeoutSeconds: 10800
---    
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
  labels:
    app: odlckan
  name: odlckan
spec:
  replicas: 1
  serviceName: odlckan-hs
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: odlckan
  template:
    metadata:
      labels:
        app: odlckan
    spec:
      initContainers:
        # Wait for postgres to show up
        - name: wait-for-pg
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until nc -vz ${POSTGRES_HOST}.odl-ckan-dev-ns 5432; do echo "Waiting for postgres..."; sleep 3; done;']
          envFrom:
          - configMapRef:
              name: ckan-env-vars
      containers:
        - envFrom:
          - configMapRef:
              name: ckan-env-vars
          image: odl-ckan-image
          name: odl-ckan
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
          resources:
            requests:
              memory: 1Gi
              cpu: 500m
            limits:
              memory: 2Gi
              cpu: 1000m
      restartPolicy: Always
      volumeMounts:
        # secrets
        - name: kvsecrets
          subPath: ckan0_secret
          mountPath: /etc/ckan_secrets/ckan0_secret
          readOnly: true
        - name: kvsecrets
          subPath: orstedca_secret
          mountPath: /etc/ckan_secrets/orstedca_secret
          readOnly: true
        - name: kvsecrets
          subPath: odl_ckan_security_user_oidc_client_secret
          mountPath: /etc/ckan_secrets/odl_ckan_security_user_oidc_client_secret
          readOnly: true
        - name: kvsecrets
          subPath: odl_ckan_trust_store_password
          mountPath: /etc/ckan_secrets/odl_ckan_trust_store_password
          readOnly: true
        - name: kvsecrets
          subPath: odl_ckan_key_store_password
          mountPath: /etc/ckan_secrets/odl_ckan_key_store_password
          readOnly: true
        # configmap
        - name: ckan-config
          mountPath: /etc/ckan/production.ini
          subPath: ckan.ini
          #ADD DATA VOLUMES BELOW LATER
      volumes:
        - name: odlckan-data-shared
          persistentVolumeClaim:
            claimName: odlckan-data-shared-claim
        - name: kvsecrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: TBD-OVERLAY-secret-provider
            nodePublishSecretRef:
              name: kvcreds
        # configmap 
        - name: ckan-config
          configMap:
            name: ckan-config
            items:
              - key: ckan-ini
                path: ckan-ini
      imagePullSecrets:
      - name: odlckanregistrykey
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: odlckan-data
    spec:
      accessModes: [ ReadWriteOnce ]
      storageClassName: odl-ckan-sc
      resources:
        requests:
          storage: 32Gi