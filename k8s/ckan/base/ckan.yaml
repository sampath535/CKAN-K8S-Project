apiVersion: v1
kind: Service
metadata:
  name: odeckan-service
  labels:
    app: odeckan
  annotations: 
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
  selector:
    app: odeckan
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: odeckan
spec:
  selector:
    matchLabels:
      app: odeckan
  serviceName: odeckan-service
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady #Parallel
  template:
    metadata:
      labels:
        app: odeckan
    spec:
      containers:
        - command:
          - bash
          - -c
          - |
            set -e

            CONFIG="${CKAN_CONFIG}/production.ini"

            abort () {
              echo "$@" >&2
              exit 1
            }
            write_config () {
              echo "Generating config at ${CONFIG}..."
              ckan generate config "$CONFIG"
            }

            # If we don't already have a config file, bootstrap
            if [ ! -e "$CONFIG" ]; then
              write_config
            fi
          
            ckan --config "$CONFIG" db init
            ckan --config "$CONFIG" search-index rebuild

            sudo cp $CKAN_HOME/orsted-scripts/ckan-automatic-updates-cron /etc/cron.d/ckan-automatic-updates
            sudo crontab /etc/cron.d/ckan-automatic-updates
            env >> $CKAN_HOME/.profile
            sudo service cron restart
            gunicorn --bind 0.0.0.0:5000 wsgi:application

          envFrom:
          - configMapRef:
              name: ckan-env-vars
          image: ode-ckan-image
          name: ode-ckan
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
              name: client
              protocol: TCP
          resources:
            requests:
              memory: 1Gi
              cpu: 500m
            limits:
              memory: 2Gi
              cpu: 1000m
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - 'wget -T2 -O- http://odesolr-service:8983/'
            initialDelaySeconds: 20
            timeoutSeconds: 20
            periodSeconds: 20
            failureThreshold: 6
            successThreshold: 2
          volumeMounts:
          - name: ckan-secrets
            mountPath: /etc/ckan_secrets
            readOnly: true
          - mountPath: /var/lib/ckan-backup
            name: odeckan-data
          - mountPath: /usr/lib/ckan/orsted-scripts/ckan-automatic-updates-cron
            name: ckan-automatic-updates-cron
            subPath: ckan-automatic-updates-cron
          - mountPath: /usr/lib/ckan/orsted-scripts/ckan-automatic-updates.sh
            name: ckan-automatic-updates-sh
            subPath: ckan-automatic-updates.sh
      restartPolicy: Always
      volumes:
      - name: ckan-secrets
      - name: ckan-automatic-updates-cron
        configMap:
          name: ckan-cron
          items:
            - key: ckan-automatic-updates-cron
              path: ckan-automatic-updates-cron
          defaultMode: 0744
      - name: ckan-automatic-updates-sh
        configMap:
          name: ckan-cron
          items:
            - key: ckan-automatic-updates.sh
              path: ckan-automatic-updates.sh
          defaultMode: 0744
  volumeClaimTemplates:
  - metadata:
      name: odeckan-data
    spec:
      accessModes: [ ReadWriteOnce ]
      storageClassName: ode-ckan-sc
      resources:
        requests:
          storage: 64Gi