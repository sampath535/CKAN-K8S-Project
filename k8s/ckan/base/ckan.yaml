apiVersion: v1
kind: Service
metadata:
  name: odeckan-service
  labels:
    app: odeckan
  annotations: 
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
  selector:
    app: odeckan
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: odeckan
  name: odeckan
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odeckan
  template:
    metadata:
      labels:
        app: odeckan
    spec:
      serviceAccount: ode-ckan-kv-access
      containers:
        - command:
          - bash
          - -c
          - |
            set -e

            CONFIG="${CKAN_CONFIG}/production.ini"

            abort () {
              echo "$@" >&2
              exit 1
            }
            write_config () {
              echo "Generating config at ${CONFIG}..."
              ckan generate config "$CONFIG"
            }

            # If we don't already have a config file, bootstrap
            if [ ! -e "$CONFIG" ]; then
              write_config
            fi
          
            ckan --config "$CONFIG" db init
            ckan --config "$CONFIG" search-index rebuild
            cd src/ckan/
            gunicorn --bind 0.0.0.0:5000 wsgi:application

          envFrom:
          - configMapRef:
              name: ckan-env-vars
          env:
          - name: CKAN_SQLALCHEMY_URL
            valueFrom:
              secretKeyRef:
                key: ode-ckan-pg-conn-string
                name: ode-pg-secrets
          image: ode-ckan-image
          name: ode-ckan
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
              name: client
              protocol: TCP
          resources:
            requests:
              memory: 1Gi
              cpu: 500m
            limits:
              memory: 2Gi
              cpu: 1000m
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - 'wget -T2 -O- http://odesolr-service:8983/'
            initialDelaySeconds: 20
            timeoutSeconds: 20
            periodSeconds: 20
            failureThreshold: 6
            successThreshold: 2
          volumeMounts:
          - name: ckan-secrets
            mountPath: /etc/ckan_secrets
            readOnly: true
          - mountPath: /etc/ckan/production.ini
            name: production-ini
            subPath: production.ini
          - mountPath: /etc/ckan/who.ini
            name: who-ini
            subPath: who.ini
          - mountPath: /etc/ckan/apache.wsgi
            name: apache-wsgi
            subPath: apache.wsgi
      restartPolicy: Always
      volumes:
      - name: production-ini
        configMap:
          name: ckan-config
          items:
            - key: production.ini
              path: production.ini
          defaultMode: 0744
      - name: who-ini
        configMap:
          name: ckan-config
          items:
            - key: who.ini
              path: who.ini
      - name: apache-wsgi
        configMap:
          name: ckan-config
          items:
            - key: apache.wsgi
              path: apache.wsgi
      - csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "ode-ckan-secretprovider"
        name: ckan-secrets
---
apiVersion: batch/v1
kind: CronJob
metadata: 
  labels:
    app: odeckan-cron
  name: odeckan-cron
spec:
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 1
  jobTemplate: 
    spec:
      backoffLimit: 0
      template: 
        spec:
          serviceAccount: ode-ckan-kv-access
          containers: 
            - command:
              - bash
              - -c
              - |
                set -e
                . /usr/lib/ckan/orsted-ckan/bin/activate

                export API_KEY=$(cat /etc/ckan_secrets/CKAN_API_KEY)
                export PYTHONWARNINGS="ignore:Unverified HTTPS request"
                export AZURE_CLIENT_ID=$(cat /etc/ckan_secrets/CKAN_CLIENT_ID)
                export AZURE_CLIENT_SECRET=$(cat /etc/ckan_secrets/CKAN_CLIENT_SECRET)

                site_url="$CKAN_SITE_URL"/api/3
                queue_url="$AZURE_QUEUE_URL"
                storage_url="$AZURE_STORAGE_URL"
                
                python3 /usr/lib/ckan/orsted-scripts/scripts/project_import/main.py --api-key $API_KEY --url $site_url --ssl-no-verify --azure-queue-name ckan --azure-queue-archive-wasb $storage_url --azure-queue-url $queue_url 

              envFrom:
              - configMapRef:
                  name: ckan-env-vars
              image: ode-ckan-image
              name: ode-ckan-automatic-updates
              resources:
                requests:
                  memory: 1Gi
                  cpu: 500m
                limits:
                  memory: 2Gi
                  cpu: 1000m
              volumeMounts:
              - name: ckan-secrets
                mountPath: /etc/ckan_secrets
                readOnly: true
          restartPolicy: Never
          volumes:
          - csi:
              driver: secrets-store.csi.k8s.io
              readOnly: true
              volumeAttributes:
                secretProviderClass: "ode-ckan-secretprovider"
            name: ckan-secrets
  schedule: "*/2 * * * *"