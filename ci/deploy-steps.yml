parameters:
  - name: env
    type: string
    default: SpecifyEnv
steps:
  - download: current
    artifact: drop
    patterns: '**/*_${{ parameters.env }}.yaml'
  # - task: KubernetesManifest@0
  #   displayName: Scale CKAN down
  #   continueOnError: 'true'
  #   inputs: 
  #     action: scale
  #     kind: Deployment
  #     name: odeckan
  #     replicas: 0
  #     namespace: $(Environment.ResourceName)    
  # - task: KubernetesManifest@0  # enes sensei
  #   displayName: Stop CKAN Pods
  #   inputs:
  #     action: delete
  #     arguments: pod -l app=odeckan
  #     namespace: $(Environment.ResourceName)
  # - task: KubernetesManifest@0
  #   displayName: Scale datapusher down
  #   continueOnError: 'true'
  #   inputs: 
  #     action: scale
  #     kind: Deployment
  #     name: odedatapusher
  #     replicas: 0
  #     namespace: $(Environment.ResourceName) 
  # - task: KubernetesManifest@0
  #   displayName: Scale redis down
  #   continueOnError: 'true'
  #   inputs: 
  #     action: scale
  #     kind: Deployment
  #     name: oderedis
  #     replicas: 0
  #     namespace: $(Environment.ResourceName)
  # - task: KubernetesManifest@0
  #   displayName: Scale solr down
  #   continueOnError: 'true'
  #   inputs: 
  #     action: scale
  #     kind: Deployment
  #     name: odesolr
  #     replicas: 0
  #     namespace: $(Environment.ResourceName)      
  - task: KubernetesManifest@0
    displayName: Deploy CKAN
    inputs:
      action: deploy
      namespace: $(Environment.ResourceName)
      manifests: $(Pipeline.Workspace)/drop/ckan_*.yaml
  - task: KubernetesManifest@0
    displayName: Deploy datapusher
    inputs:
      action: deploy
      namespace: $(Environment.ResourceName)
      manifests: $(Pipeline.Workspace)/drop/datapusher_*.yaml
  - task: KubernetesManifest@0
    displayName: Deploy redis
    inputs:
      action: deploy
      namespace: $(Environment.ResourceName)
      manifests: $(Pipeline.Workspace)/drop/redis_*.yaml
  - task: KubernetesManifest@0
    displayName: Deploy solr
    inputs:
      action: deploy
      namespace: $(Environment.ResourceName)
      manifests: $(Pipeline.Workspace)/drop/solr_*.yaml